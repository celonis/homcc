name: Build PR Branch

on:
  push:
    paths-ignore:
      - README.md
      - .gitignore
    branches-ignore:
      - main
  pull_request:
    types:
      - opened

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install liblzo2-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Execute linters
        run: |
          pylint -v --rcfile=.pylintrc *.py homcc tests
          mypy -v --pretty *.py homcc
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install liblzo2-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Execute format-check
        uses: psf/black@stable
        with:
          options: "--check --color --diff --verbose"
      - name: Execute isort
        uses: isort/isort-action@master
        with:
          configuration: "--check --color --diff --gitignore --verbose"
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install liblzo2-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -v -rfE --cov=homcc --capture=tee-sys
  vera-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install liblzo2-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Veracode SCA Scan
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan --loud --allow-dirty --scm-ref v${{ env.RELEASE_VERSION }} --scm-ref-type branch
      - name: Zip repository
        run: zip -r homcc.zip .
      - name: Run Veracode SAST Scan
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          # this is the reason why the application name in veracode; it needs to match the name of github repository
          appname: '${{ github.repository }}'

          # this assigns an ID to the scan on veracode platform
          version: '${{ github.run_id }}'

          filepath: 'homcc.zip'

          # these are set globally
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_SECRET }}'

          # set to 'true' for develop branch, it will not affect project score but will give policy results
          # set to 'false' for master branch
          createsandbox: false

          # minutes to wait until the end of the scan
          scantimeout: 30
      - name: Remove VeraCode artifact
        run: rm homcc.zip
